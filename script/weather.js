const axios = require('axios');
const fs = require('fs');
const path = require('path');

module.exports.config = {
  name: "weather",
  version: "1.0.0",
  aliases: ['weatherinfo', 'weatherforecast'],
  description: "Displays detailed current weather information for a specified city.",
  usage: "weather <city_name>",
  cooldown: 5
};

module.exports.run = async ({ api, event, args }) => {
  try {
    const city = args.join(" ");
    if (!city) {
      return api.sendMessage("‚ùå Please provide a valid city name.", event.threadID, event.messageID);
    }

    const response = await axios.get(`https://aryanchauhanapi.onrender.com/weather?city=${city}`);
    const weatherData = response.data;

    const location = weatherData.location;
    const current = weatherData.current;

    const message = `
üå§Ô∏è ùó™ùó≤ùóÆùòÅùóµùó≤ùóø ùóúùóªùó≥ùóºùóøùó∫ùóÆùòÅùó∂ùóºùóª

üìç| ùóñùó∂ùòÅùòÜ: ${location.name}, ${location.region}, ${location.country}
üïí| ùóüùóºùó∞ùóÆùóπ ùóßùó∂ùó∫ùó≤: ${location.localtime}
üå°Ô∏è| ùóßùó≤ùó∫ùóΩ: ${current.temp_c}¬∞C (${current.temp_f}¬∞F})
‚òÄÔ∏è| ùóñùóºùóªùó±ùó∂ùòÅùó∂ùóºùóª: ${current.condition.text}
üí®| ùó™ùó∂ùóªùó±: ${current.wind_kph} kph (${current.wind_mph} mph) ${current.wind_dir}
üå´Ô∏è| ùóõùòÇùó∫ùó∂ùó±ùó∂ùòÅùòÜ: ${current.humidity}%
üßä| ùóôùó≤ùó≤ùóπùòÄ ùóπùó∂ùó∏ùó≤: ${current.feelslike_c}¬∞C (${current.feelslike_f}¬∞F})
üåÄ| ùó™ùó∂ùóªùó± ùóñùóµùó∂ùóπùóπ: ${current.windchill_c}¬∞C (${current.windchill_f}¬∞F})
üå®Ô∏è| ùóóùó≤ùòÑ ùó£ùóºùó∂ùóªùòÅ: ${current.dewpoint_c}¬∞C (${current.dewpoint_f}¬∞F})
üîç| ùó©ùó∂ùòÄùó∂ùóØùó∂ùóπùó∂ùòÅùòÜ: ${current.vis_km} km (${current.vis_miles} miles)
üí®| ùó™ùó∂ùóªùó± ùóöùòÇùòÄùòÅ: ${current.gust_kph} kph (${current.gust_mph} mph)
üåû| ùó®ùó© ùóúùóªùó±ùó≤ùòÖ: ${current.uv}`;

    const cacheDir = path.join(__dirname, 'script', 'cache');
    if (!fs.existsSync(cacheDir)) {
      fs.mkdirSync(cacheDir, { recursive: true });
    }

    const iconUrl = `https:${current.condition.icon}`;
    const iconPath = path.join(cacheDir, 'weather_icon.png');

    const { data } = await axios.get(iconUrl, { responseType: 'stream' });
    const writer = fs.createWriteStream(iconPath);

    data.pipe(writer);

    writer.on('finish', () => {
      api.sendMessage(
        { 
          body: message, 
          attachment: fs.createReadStream(iconPath) 
        },
        event.threadID,
        event.messageID,
        () => fs.unlinkSync(iconPath) // Cleanup the cached image after sending
      );
    });

    writer.on('error', (error) => {
      console.error('Error downloading weather icon:', error.message);
      api.sendMessage("‚ùå An error occurred while fetching the weather icon. Please try again later.", event.threadID, event.messageID);
    });

  } catch (error) {
    console.error('Error fetching weather data:', error.message);
    api.sendMessage("‚ùå An error occurred while fetching the weather data. Please try again later.", event.threadID, event.messageID);
  }
};
